version: '3.6'
x-cache-from:
  - &app-cache-from
    cache_from:
      - ${NGINX_IMAGE:-iw/nginx}
      - ${PHP_IMAGE:-iw/php}
  - &node-cache-from
    cache_from:
      - ${NODE_IMAGE:-iw/node}

services:
  mysql:
    image: mysql
    restart: always
    ports:
        - "3308:3306"
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
  

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - mysql
    

  php:
    image: ${PHP_IMAGE:-iw/php}
    build:
      context: ./app
      target: app_php
      <<: *app-cache-from
    volumes:
      - ./app:/srv/app:rw
      - ./app/docker/php/conf.d/api-platform.dev.ini/:/usr/local/etc/php/conf.d/api-platform.ini
      #- app-front:/srv/app/public/build
      - app-sf-cache:/srv/app/var

  node:
    image: ${NODE_IMAGE:-iw/node}
    build:
      context: ./app
      dockerfile: Dockerfile.node
      <<: *node-cache-from
    command: sh -c "yarn install; yarn watch"
    working_dir: /home/node/app
    depends_on:
      - php
    volumes:
      - ./app:/home/node/app

  nginx:
    image: ${NGINX_IMAGE:-iw/nginx}
    build:
      context: ./app
      target: app_nginx
      <<: *app-cache-from
    depends_on:
      - php
      - node
    volumes:
      - ./app/public:/srv/app/public:ro
      #- app-front:/srv/app/public/build:ro
    ports:
      - "8082:80"

volumes:
  db_data: {}
  app-sf-cache: {}
  app-front: {}
